{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Clase IV - Python: Librerías principales - PCSyH","provenance":[{"file_id":"1BgUC5CLsmYmVu6ZzhG6NCRt4MDpbBIO2","timestamp":1600721156109}],"collapsed_sections":["e5lf9stap8dR","6K7PY1E8rKPo","Ev-MHC73BTXF","m-1qmbuPDxyd","02Bx8aoI8fwp","XnzoxEWxKTgR","0717Mrak7Iy0","d-2SBIwXBziG","lmjv-D4iB_bt","cKrvFLfkIyqi"],"toc_visible":true,"authorship_tag":"ABX9TyNT6c4HHlENqPfTYXKrj56P"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"0wlnLc0Uo7jO"},"source":["# **Python - Librerías principales**\n"]},{"cell_type":"markdown","metadata":{"id":"RtNZNQkgpOyv"},"source":["¡Arreglos, tablas y gráficos!\n","\n","En la clase de hoy vamos a trabajar sobre las librerías Numpy, Pandas y Matplotlib.\n","\n","- **Librerías**.\n","  - Sintaxis para trabajar con una librería.\n","\n","- **Numpy**\n","  - Creación de arreglos o array.\n","  - Acceso / indexación.\n","\n","- **Pandas**\n","  - Creación de series y dataframes.\n","  - Indexación y subconjuntos.\n","  - Tablas.\n","\n","- **Matplotlib**\n","  - Sintaxis de gráficos.\n","  - Gráficos por consola.\n"]},{"cell_type":"markdown","metadata":{"id":"e5lf9stap8dR"},"source":["## **Sintaxis para trabajar con librerías.**"]},{"cell_type":"markdown","metadata":{"id":"Fu5wO_8YvmAB"},"source":["### **Buscando la caja de herramientas.**"]},{"cell_type":"markdown","metadata":{"id":"6K7PY1E8rKPo"},"source":["#### **Importar librerías y módulos.**\n","\n","Cuando trabajamos con una librería o un módulo, debemos *importarlo*. Esto significa que el módulo se encuentra fuera de nuestro entorno y lo debemos traer a nuestro ambiente de ejecución para utilizarlo.\n","\n","\n","---"]},{"cell_type":"markdown","metadata":{"id":"eoTVQXiFrc1G"},"source":["#### **Por primera y única vez, lo instalamos.**\n","\n","Dado que vamos a buscar la herramienta por primera vez, lo primero que debemos hacer es instalarla en nuestro ambiente local.\n","\n","*Nota 1* | Si no instalamos por primera - y única vez - el paquete que queremos utilizar, vamos a tener un error a la hora de querer importarlo posteriormente."]},{"cell_type":"code","metadata":{"id":"QJXZwWJG_KkW","executionInfo":{"status":"ok","timestamp":1601398352295,"user_tz":180,"elapsed":8681,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"5245a25e-587b-4f7e-9b6d-cdb298976ba5","colab":{"base_uri":"https://localhost:8080/","height":243}},"source":["#Sintaxis para instalar una librería\n","#Utilizamos el comando \"!pip install\" y el nombre del paquete que queremos instalar. \n","\n","#Instalamos Pandas\n","!pip install pandas\n","\n","#Instalamos Numpy\n","!pip install numpy\n","\n","#Instalamos Matplotlib\n","!pip install Matplotlib"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: pandas in /usr/local/lib/python3.6/dist-packages (1.0.5)\n","Requirement already satisfied: numpy>=1.13.3 in /usr/local/lib/python3.6/dist-packages (from pandas) (1.18.5)\n","Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.6/dist-packages (from pandas) (2018.9)\n","Requirement already satisfied: python-dateutil>=2.6.1 in /usr/local/lib/python3.6/dist-packages (from pandas) (2.8.1)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.6/dist-packages (from python-dateutil>=2.6.1->pandas) (1.15.0)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.6/dist-packages (1.18.5)\n","Requirement already satisfied: Matplotlib in /usr/local/lib/python3.6/dist-packages (3.2.2)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.6/dist-packages (from Matplotlib) (1.2.0)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.6/dist-packages (from Matplotlib) (2.4.7)\n","Requirement already satisfied: numpy>=1.11 in /usr/local/lib/python3.6/dist-packages (from Matplotlib) (1.18.5)\n","Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.6/dist-packages (from Matplotlib) (2.8.1)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.6/dist-packages (from Matplotlib) (0.10.0)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.6/dist-packages (from python-dateutil>=2.1->Matplotlib) (1.15.0)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"4f_iRUtAAjUV"},"source":["El comando utilizado \"!pip\" nos permite manejar y manipular distintos paquetes. El comando pip es el \"manejador\" de paquetes de Python y, en este caso particular, procedemos a instalarlo el paquete que detallamos a continuación."]},{"cell_type":"markdown","metadata":{"id":"WXXDax4dWXke"},"source":["### **Sintaxis de importación.**\n","\n","Ahora que ya tenemos los paquetes instalados, procedemos a importarlos para poder utilizarlos localmente. En este sentido, tenemos dos formas convencionales de traernos los paquetes para utilizarlos.\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"Ev-MHC73BTXF"},"source":["#### **Importamos todo el paquete, traemos toda la caja de herramientas.**"]},{"cell_type":"code","metadata":{"id":"MHX51F5dBb-a"},"source":["#Traigo toda la caja de herramientas \"pandas\".\n","#Realizo una abreviatura para reutilizar sus métodos cuando escriba código.\n","import pandas as pd\n","\n","#Lo mismo con \"numpy\"\n","import numpy as np\n","\n","#Lo mismo con matplotlib.\n","import matplotlib as plt"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"cTWkfPr-B8A8"},"source":["En esta celda de código importo 3 librerías que utilizaré de forma general. Una vez que ejecutamos la celda, ya tenemos disponible para utilizar el conjunto de métodos y funciones dentro del paquete.\n","\n","_Sintaxis_\n","\n","1. Utilizo la palabra reservada \"import\".\n","2. Detallo el nombre del paquete que quiero importar (dado que lo instalé previamente, la palabra está *definida* como tal)\n","3. Utilizo la palabra reservada \"as\" para detallar la abreviatura de cómo voy a estar llamando al paquete de ahora en más en mi código local. \n","\n","\n","*Nota 2* | La abreviación es un uso convencional. Podemos obviar hacerlo y utilizar los métodos asociados al paquete sin necesidad. Sin embargo, abreviarlo es una forma de utilizar menos código a la hora de llamar al paquete cuando utilicemos sus métodos. \n","\n","*Nota 3* | Dado que no conocemos todas las herramientas del paquete - y en general utilizamos más de una - en general esta será la forma que más utilicemos a la hora de trabajar con librerías.\n","\n","*Nota 4* | A la hora de trabajar con librerías, es una buena práctica tener la documentación de consulta a mano. "]},{"cell_type":"markdown","metadata":{"id":"m-1qmbuPDxyd"},"source":["#### **Importamos sólo algunas herramientas**."]},{"cell_type":"code","metadata":{"id":"dMXpXQ_PEBG9"},"source":["#En lugar de traerme toda la librería pandas, especifico el nombre del método que quiero utilizar y la librería de la cual quiero utilizar.\n","\n","#En este caso, sólo me traje UN método de toda la caja - read_csv - \n","from pandas import read_csv\n","\n","#En este caso sólo me traigo el método array. \n","from numpy import array\n","\n","#Podemos traer varias funciones respetando la sintaxis \n","from math import sin,cos "],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"-5XQ5ESSEnjV"},"source":["A la hora de ejecutar esta celda de código, tendremos disponible sólo la herramienta que pedimos importarr. \n","\n","*Sintaxis* \n","1. Con la palabra reservada \"from\" especifico la librería de la cual quiero obtener la herramienta.\n","2. Detallo el nombre de la librería.\n","3. Utilizo la misma sintaxis de importación detallaando el nombre del método.\n","\n","*Nota 5* | Importar sólamente un método es útil cuando ya sabemos lo que queremos hacer y con qué herramienta en particular. Al principio esto no será tan práctico, pero en la medida que vayan surgiendo nuevas necesidades con soluciones específicas, van a encontrarle utilidad.\n","\n","*Nota 6* | En general, hay librerías que utilizamos casi siempre de forma completa. Numpy y Pandas son un ejemplo de esto."]},{"cell_type":"markdown","metadata":{"id":"C10MopSWF6g1"},"source":["#### **Importamos un módulo de las librería.**\n","\n","A veces las librerías son demasiado grandes y se encuentran paquetizadas en pequeños módulos que encuadran una *subtemática* o conjunto de métodos asociados. Podemos usarlo como punto intermedio entre tener que importar toda la librería y sólo los métodos conocidos."]},{"cell_type":"code","metadata":{"id":"2Y_VHnjNF5en"},"source":["#En este caso, voy a importar solamente el módulo \".pyplot\" de la librería Matplotlib\n","import matplotlib.pyplot as plt"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"zg5fiP1wGmB6"},"source":["La sintaxis es muy sencilla: detallamos el nombre del módulo con un punto después del nombre de la librería. "]},{"cell_type":"markdown","metadata":{"id":"-7sHSF_RIkJ6"},"source":["Podemos hacer una consulta rápida sobre las herramientas que integran la caja que nos importamos."]},{"cell_type":"code","metadata":{"id":"IrCNSyL8Htck","executionInfo":{"status":"ok","timestamp":1601353950603,"user_tz":180,"elapsed":722,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"524e0679-9b36-45f2-8bd5-fc4ca245c1d2","colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["#Consultar el listado de métodos o \"herramientas\" dentro del paquete\n","#Utilizo la función dir y le paso como argumento \"pd\" que corresponde a la forma abreviada con la cual importamos pandas. \n","dir(pd)\n","#Vemos que nos imprime por pantalla todos los métodos que la integran.\n","#No siendo muy práctico, recomiendo mirar la documentación. "],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['BooleanDtype',\n"," 'Categorical',\n"," 'CategoricalDtype',\n"," 'CategoricalIndex',\n"," 'DataFrame',\n"," 'DateOffset',\n"," 'DatetimeIndex',\n"," 'DatetimeTZDtype',\n"," 'ExcelFile',\n"," 'ExcelWriter',\n"," 'Float64Index',\n"," 'Grouper',\n"," 'HDFStore',\n"," 'Index',\n"," 'IndexSlice',\n"," 'Int16Dtype',\n"," 'Int32Dtype',\n"," 'Int64Dtype',\n"," 'Int64Index',\n"," 'Int8Dtype',\n"," 'Interval',\n"," 'IntervalDtype',\n"," 'IntervalIndex',\n"," 'MultiIndex',\n"," 'NA',\n"," 'NaT',\n"," 'NamedAgg',\n"," 'Panel',\n"," 'Period',\n"," 'PeriodDtype',\n"," 'PeriodIndex',\n"," 'RangeIndex',\n"," 'Series',\n"," 'SparseArray',\n"," 'SparseDataFrame',\n"," 'SparseDtype',\n"," 'SparseSeries',\n"," 'StringDtype',\n"," 'Timedelta',\n"," 'TimedeltaIndex',\n"," 'Timestamp',\n"," 'UInt16Dtype',\n"," 'UInt32Dtype',\n"," 'UInt64Dtype',\n"," 'UInt64Index',\n"," 'UInt8Dtype',\n"," '__Datetime',\n"," '__DatetimeSub',\n"," '__SparseArray',\n"," '__SparseArraySub',\n"," '__builtins__',\n"," '__cached__',\n"," '__doc__',\n"," '__docformat__',\n"," '__file__',\n"," '__git_version__',\n"," '__loader__',\n"," '__name__',\n"," '__numpy',\n"," '__package__',\n"," '__path__',\n"," '__spec__',\n"," '__version__',\n"," '_config',\n"," '_hashtable',\n"," '_is_numpy_dev',\n"," '_lib',\n"," '_libs',\n"," '_np_version_under1p14',\n"," '_np_version_under1p15',\n"," '_np_version_under1p16',\n"," '_np_version_under1p17',\n"," '_np_version_under1p18',\n"," '_testing',\n"," '_tslib',\n"," '_typing',\n"," '_version',\n"," 'api',\n"," 'array',\n"," 'arrays',\n"," 'bdate_range',\n"," 'compat',\n"," 'concat',\n"," 'core',\n"," 'crosstab',\n"," 'cut',\n"," 'date_range',\n"," 'datetime',\n"," 'describe_option',\n"," 'errors',\n"," 'eval',\n"," 'factorize',\n"," 'get_dummies',\n"," 'get_option',\n"," 'infer_freq',\n"," 'interval_range',\n"," 'io',\n"," 'isna',\n"," 'isnull',\n"," 'json_normalize',\n"," 'lreshape',\n"," 'melt',\n"," 'merge',\n"," 'merge_asof',\n"," 'merge_ordered',\n"," 'notna',\n"," 'notnull',\n"," 'np',\n"," 'offsets',\n"," 'option_context',\n"," 'options',\n"," 'pandas',\n"," 'period_range',\n"," 'pivot',\n"," 'pivot_table',\n"," 'plotting',\n"," 'qcut',\n"," 'read_clipboard',\n"," 'read_csv',\n"," 'read_excel',\n"," 'read_feather',\n"," 'read_fwf',\n"," 'read_gbq',\n"," 'read_hdf',\n"," 'read_html',\n"," 'read_json',\n"," 'read_orc',\n"," 'read_parquet',\n"," 'read_pickle',\n"," 'read_sas',\n"," 'read_spss',\n"," 'read_sql',\n"," 'read_sql_query',\n"," 'read_sql_table',\n"," 'read_stata',\n"," 'read_table',\n"," 'reset_option',\n"," 'set_eng_float_format',\n"," 'set_option',\n"," 'show_versions',\n"," 'test',\n"," 'testing',\n"," 'timedelta_range',\n"," 'to_datetime',\n"," 'to_numeric',\n"," 'to_pickle',\n"," 'to_timedelta',\n"," 'tseries',\n"," 'unique',\n"," 'util',\n"," 'value_counts',\n"," 'wide_to_long']"]},"metadata":{"tags":[]},"execution_count":23}]},{"cell_type":"markdown","metadata":{"id":"02Bx8aoI8fwp"},"source":["## **Numpy: arreglos y operaciones básicas.**\n"]},{"cell_type":"markdown","metadata":{"id":"oXhRs6mQKiSY"},"source":["Numpy es la librería más utilizada para trabajar con cálculo matricial. Si bien puede parecer un poco abstracto, el uso de estructuras matriciales y vectoriales es sumamente importante para la manipulación de datos. \n","\n","No hace falta que seamos expertos en manipularlos, simplemente será suficiente con conocer la estructura y operaciones básicas del principal objeto que nos brinda Numpy: *los arreglos*."]},{"cell_type":"markdown","metadata":{"id":"XnzoxEWxKTgR"},"source":["### **Arreglos de** *n* **dimensiones.**\n","\n","Los arreglos son estructuras de almacenamiento que soportan n cantidad de elementos en n cantidad de dimensiones. Parte de sus cualidades es que son muy útiles y más eficientes en velocidad que otras estructuras de almacenamiento de datos tales como las listas."]},{"cell_type":"code","metadata":{"id":"qLrAyw6SKLT2"},"source":["#Sólo para recordar importamos nuestra librería otra vez.\n","import numpy as np"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"m6BsUcnWM8_c","executionInfo":{"status":"ok","timestamp":1601398904653,"user_tz":180,"elapsed":729,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"2c2db7c0-7497-486d-8892-3183d13a28b6","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["#Creando nuestro 1° array\n","\n","#Utilizamos el método \"array\" asociado a la librería \"Numpy\" que la importamos como \"np\"\n","array_1 = np.array([1,2,3])\n","\n","#Imprimimos por pantalla nuestro primer array.\n","array_1"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 2, 3])"]},"metadata":{"tags":[]},"execution_count":293}]},{"cell_type":"code","metadata":{"id":"-PNfkd2dLmdq","executionInfo":{"status":"ok","timestamp":1601398926047,"user_tz":180,"elapsed":972,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"67804b57-c404-4dc4-b435-2b8d879d10b0","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["#Consultamos el tipo de nuestra variable.\n","type(array_1)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["numpy.ndarray"]},"metadata":{"tags":[]},"execution_count":294}]},{"cell_type":"code","metadata":{"id":"x5qusBGWL5xH","executionInfo":{"status":"ok","timestamp":1601384436305,"user_tz":180,"elapsed":749,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"083129e5-b76a-44e6-af06-909487d6e2ac","colab":{"base_uri":"https://localhost:8080/","height":52}},"source":["#Creamos nuestro 2° array.\n","array_2 = np.array(([1,2,3,4],[1,2,3,4]))\n","\n","#Imprimimos por pantalla nuestro segundo array\n","array_2"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1, 2, 3, 4],\n","       [1, 2, 3, 4]])"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"id":"5lRZtt7AMQu6","executionInfo":{"status":"ok","timestamp":1601399073531,"user_tz":180,"elapsed":1107,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"ae2a9f38-f2df-4b3d-8e49-d7919fed97db","colab":{"base_uri":"https://localhost:8080/","height":86}},"source":["#Creamos nuestro 3° array.\n","array_3 = np.array(([1,2],[1,2],[1,2],[1,2]))\n","\n","#Imprimios por pantalla nuestro tercer array.\n","array_3"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1, 2],\n","       [1, 2],\n","       [1, 2],\n","       [1, 2]])"]},"metadata":{"tags":[]},"execution_count":295}]},{"cell_type":"code","metadata":{"id":"_8qBroChMcEy","executionInfo":{"status":"ok","timestamp":1601384556599,"user_tz":180,"elapsed":744,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"b058c514-494d-4f39-a28e-5cbacc386ff7","colab":{"base_uri":"https://localhost:8080/","height":69}},"source":["#Creo una variable lista integrada por mis 3 arrays\n","lista_arrays = [array_1,array_2,array_3]\n","\n","for array in lista_arrays:\n","  print(\"La forma de este array es\",array.shape,\"y tiene\",array.size,\"elementos\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["La forma de este array es (3,) y tiene 3 elementos\n","La forma de este array es (2, 4) y tiene 8 elementos\n","La forma de este array es (4, 2) y tiene 8 elementos\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"97FYHRir7lyt"},"source":["*Sintaxis del arreglo.*\n","\n","1. El conjunto de elementos se escribe entre paréntesis.\n","2. Cada dimensión del array va entre corchetes.\n","3. Las *n* dimensiones del array van entre corchetes.\n","\n","En la celda de código anterior, consultamos la *forma* de los arrays creados, es decir, la cantidad de dimensiones y elementos que posee cada uno. "]},{"cell_type":"markdown","metadata":{"id":"0717Mrak7Iy0"},"source":["### **Indexing: Consultar los elementos de un arreglo.**\n","\n","Para ubicar un objeto en particular, debemos acceder a los elementos que poseen un arreglo. Tenemos *3 formas* de recorrer un arreglo. "]},{"cell_type":"markdown","metadata":{"id":"d-2SBIwXBziG"},"source":["##### **Slicing**"]},{"cell_type":"code","metadata":{"id":"RVIPIkBf-rrN","executionInfo":{"status":"ok","timestamp":1601399377029,"user_tz":180,"elapsed":704,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"0e4f8072-cdd3-4451-d094-e37b4798c5d1","colab":{"base_uri":"https://localhost:8080/","height":191}},"source":["#Creo un array de 10 dimensiones con 10 elementos cada una. \n","array_4 = np.arange(100).reshape(10,10)\n","\n","#Imprimo por pantalla el array de 10 dimensiones\n","print(array_4)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[[ 0  1  2  3  4  5  6  7  8  9]\n"," [10 11 12 13 14 15 16 17 18 19]\n"," [20 21 22 23 24 25 26 27 28 29]\n"," [30 31 32 33 34 35 36 37 38 39]\n"," [40 41 42 43 44 45 46 47 48 49]\n"," [50 51 52 53 54 55 56 57 58 59]\n"," [60 61 62 63 64 65 66 67 68 69]\n"," [70 71 72 73 74 75 76 77 78 79]\n"," [80 81 82 83 84 85 86 87 88 89]\n"," [90 91 92 93 94 95 96 97 98 99]]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"AM0XLJUjAfkc"},"source":["La sintaxis del método slicing es muy sencilla. Podemos recorrer un array detallando como parámetros dónde empieza, dónde términa y cada cuántos pasos.\n","\n","*Sintaxis* -> nombre_array[start:stop:step]\n","\n","1. nombre_array[start] --> se detalla el número de ubicación del vector. El primer elementos se cataloga como 0. \n","2. nombre_array[stop] --> se expresa hasta el número de índice donde se quiere llegar sin incluirlo.\n","3. nombre_array[step] --> se dice la cantidad de pasos que quiere dar."]},{"cell_type":"code","metadata":{"id":"SkhhdpKQ_l6H","executionInfo":{"status":"ok","timestamp":1601399460157,"user_tz":180,"elapsed":928,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"1722dae1-adf8-4519-b377-aeb9b78cb51d","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["#Consulto el primer vector de números de la matriz.\n","print(\"primer vector\",array_4[0])\n","\n","#Consulto los primeros 5 vectores \n","print(\"primeros 5 vectores\", array_4[0:5])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])"]},"metadata":{"tags":[]},"execution_count":300}]},{"cell_type":"code","metadata":{"id":"cAPPmhYbAAb0","executionInfo":{"status":"ok","timestamp":1601385769940,"user_tz":180,"elapsed":784,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"b2379581-fd4f-4db1-c944-24aefea565b4","colab":{"base_uri":"https://localhost:8080/","height":104}},"source":["#Consulto los primeros 5 vectores \n","print(\"primeros 5 vectores\",array_4[0:5])"],"execution_count":null,"outputs":[{"output_type":"stream","text":["primeros 5 vectores [[ 0  1  2  3  4  5  6  7  8  9]\n"," [10 11 12 13 14 15 16 17 18 19]\n"," [20 21 22 23 24 25 26 27 28 29]\n"," [30 31 32 33 34 35 36 37 38 39]\n"," [40 41 42 43 44 45 46 47 48 49]]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"6o8ZZIe4AItO","executionInfo":{"status":"ok","timestamp":1601399666985,"user_tz":180,"elapsed":1042,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"d63ee58f-9cef-48f7-fdae-816e974e77f7","colab":{"base_uri":"https://localhost:8080/","height":52}},"source":["#Consulto los vectores con uno de por medio\n","print(\"Vectores alternos\",array_4[0:2:1])"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Vectores alternos [[ 0  1  2  3  4  5  6  7  8  9]\n"," [10 11 12 13 14 15 16 17 18 19]]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"lmjv-D4iB_bt"},"source":["##### **Fancy indexing**\n"]},{"cell_type":"markdown","metadata":{"id":"4foyBZLmCvvm"},"source":["Lo usamos cuando queremos acceder a los elementos mediante su *ubicación* en el índice."]},{"cell_type":"code","metadata":{"id":"Mp4pfZpfCsrG","executionInfo":{"status":"ok","timestamp":1601386519021,"user_tz":180,"elapsed":875,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"1296f942-6048-4a93-cb2f-a27f81dc7cc2","colab":{"base_uri":"https://localhost:8080/","height":173}},"source":["#Creo un array de 5 vectores con 4 elementos.\n","array_5 = np.arange(40).reshape(8,5)\n","\n","#Cantidad de elementos.\n","print(\"El array tiene\",array_5.size,\"elementos\")\n","\n","#Imprimimos por pantalla para verlo.\n","array_5"],"execution_count":null,"outputs":[{"output_type":"stream","text":["El array tiene 40 elementos\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["array([[ 0,  1,  2,  3,  4],\n","       [ 5,  6,  7,  8,  9],\n","       [10, 11, 12, 13, 14],\n","       [15, 16, 17, 18, 19],\n","       [20, 21, 22, 23, 24],\n","       [25, 26, 27, 28, 29],\n","       [30, 31, 32, 33, 34],\n","       [35, 36, 37, 38, 39]])"]},"metadata":{"tags":[]},"execution_count":64}]},{"cell_type":"code","metadata":{"id":"kAGewagRDQYs","executionInfo":{"status":"ok","timestamp":1601399818616,"user_tz":180,"elapsed":717,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"31cdfce9-329b-4f05-d47f-edb60b71e1f2","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["#Consulto por el quinto elemento del vector 1. \n","array_5[1,4]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["9"]},"metadata":{"tags":[]},"execution_count":308}]},{"cell_type":"code","metadata":{"id":"dm7hB2lmDjSM","executionInfo":{"status":"ok","timestamp":1601399869781,"user_tz":180,"elapsed":778,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"6cbda7b8-92aa-46ff-84c1-883a4bf5fabf","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["#Consulto por los quintos elementos de todos los vectores.\n","array_5[:,4]\n","\n","#Me devuelve por pantalla un nuevo arreglo con los datos solicitados."],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 4,  9, 14, 19, 24, 29, 34, 39])"]},"metadata":{"tags":[]},"execution_count":309}]},{"cell_type":"code","metadata":{"id":"yNGNlooJFeWi","executionInfo":{"status":"ok","timestamp":1601399940037,"user_tz":180,"elapsed":719,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"1fefb273-f95b-4f9c-f8e2-0e279266a707","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["#Seamos más específicos en la consulta\n","array_5[2:5,3]\n","\n","#Me devuelve por pantalla tres elementos de la cuarta posición desde el 3° vector al 6°."],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([13, 18, 23])"]},"metadata":{"tags":[]},"execution_count":311}]},{"cell_type":"code","metadata":{"id":"edyrq8104Fdz","executionInfo":{"status":"ok","timestamp":1601399973830,"user_tz":180,"elapsed":634,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"a8781141-607e-42a5-8e56-7010cfeec1cc","colab":{"base_uri":"https://localhost:8080/","height":156}},"source":["array_5"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 0,  1,  2,  3,  4],\n","       [ 5,  6,  7,  8,  9],\n","       [10, 11, 12, 13, 14],\n","       [15, 16, 17, 18, 19],\n","       [20, 21, 22, 23, 24],\n","       [25, 26, 27, 28, 29],\n","       [30, 31, 32, 33, 34],\n","       [35, 36, 37, 38, 39]])"]},"metadata":{"tags":[]},"execution_count":312}]},{"cell_type":"code","metadata":{"id":"fiwsDqCyDz-Y","executionInfo":{"status":"ok","timestamp":1601400008478,"user_tz":180,"elapsed":730,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"e5ac6555-3fcf-4e00-c552-b1206c789394","colab":{"base_uri":"https://localhost:8080/","height":52}},"source":["#Le pido que me los 3 vectores ubicados en la 2°, 6° y 7° posición.\n","array_5[[1,4]] \n","\n","#Atención al cambio de sintaxis en el doble corchete."],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 5,  6,  7,  8,  9],\n","       [20, 21, 22, 23, 24]])"]},"metadata":{"tags":[]},"execution_count":315}]},{"cell_type":"markdown","metadata":{"id":"y8ojooyoGAzC"},"source":["##### **Boolean indexing**"]},{"cell_type":"markdown","metadata":{"id":"FWAtaDkfGGXE"},"source":["Lo utilizamos cuando queremos comprobar una condición el los números creando una \"máscara booleana\" de verdaderos y falsos."]},{"cell_type":"code","metadata":{"id":"_q2i-mFRGGyR","executionInfo":{"status":"ok","timestamp":1601400198130,"user_tz":180,"elapsed":1044,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"18ce685f-3889-4f1b-f332-085f52d3a123","colab":{"base_uri":"https://localhost:8080/","height":104}},"source":["#Creamos nuestro array aleatorio combinando ciertos métodos y parámetros que queremos que tenga.\n","array_6 = np.random.randint(1,1000,size=50).reshape(5,10)\n","\n","#Lo imprimimos por pantalla.\n","array_6"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[747, 589, 325, 442, 620, 347,   6, 689, 226,  12],\n","       [967, 430, 455, 764, 506,  12, 116, 144, 329, 368],\n","       [212, 559, 226, 856, 767, 560, 619, 229, 844, 996],\n","       [640, 368, 338, 454, 507, 592, 436, 897, 329, 986],\n","       [872, 547, 508,  72, 986, 706, 750,  20, 349, 594]])"]},"metadata":{"tags":[]},"execution_count":319}]},{"cell_type":"code","metadata":{"id":"jYsF_VkQGtsA","executionInfo":{"status":"ok","timestamp":1601400133365,"user_tz":180,"elapsed":702,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"213c2638-ed50-482a-f5eb-25ca3af62d7d","colab":{"base_uri":"https://localhost:8080/","height":52}},"source":["#Le pido que devuelva aquellos que cumple con la condición en el array.\n","array_6[array_6 < 500]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([343, 273, 435, 245, 389, 106, 283, 295, 374, 195, 393, 202, 139,\n","       447, 487, 407, 128, 421, 349])"]},"metadata":{"tags":[]},"execution_count":318}]},{"cell_type":"code","metadata":{"id":"NxWu5AaJHPrL","executionInfo":{"status":"ok","timestamp":1601400205331,"user_tz":180,"elapsed":782,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"bf9caab8-5a1f-460a-83da-1192e5bfa258","colab":{"base_uri":"https://localhost:8080/","height":104}},"source":["#En este caso, genero la máscara booleana para chequear una condición.\n","print(array_6 < 100)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[[False False False False False False  True False False  True]\n"," [False False False False False  True False False False False]\n"," [False False False False False False False False False False]\n"," [False False False False False False False False False False]\n"," [False False False  True False False False  True False False]]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"cKrvFLfkIyqi"},"source":["## **Pandas: Manipulación de datos en tablas.**"]},{"cell_type":"markdown","metadata":{"id":"QUIyiOeDM13W"},"source":["Para trabajar con Pandas debemos tener en claro dos premisas básicas. \n","1. Las dos estructuras básicas que podemos utilizar: series y dataframes.\n","2. La infinita cantidad de métodos y funciones que podemos utilizar consultando la documentación.\n","\n","*Nota 1* | Pandas es una librería especializada en el trabajo y manejo de tablas. En ese sentido, tiene toda una artillería de recursos desarrollados para esta aplicación. Es indispensable, a la hora de querer operar con tablas, consultar la documentación para usar los métodos adecuados.\n"]},{"cell_type":"markdown","metadata":{"id":"-MqFq398JSu6"},"source":["#### **Pandas sin vueltas.**\n","\n","Las series y dataframes los iremos utilizando en la medida que necesitemos combinarlos y manipular estructuras de datos. Conceptualmente...\n","\n","1. Serie --> conjunto de elementos asociados de un mismo tipo.\n","2. Dataframe --> conjunto de series en formato tabular."]},{"cell_type":"code","metadata":{"id":"_jOqSSVXI6Pd"},"source":["import pandas as pd"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"qRCPfaIjNAO4","executionInfo":{"status":"ok","timestamp":1601400989633,"user_tz":180,"elapsed":776,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"1c6f9c27-bbcc-4c70-8e68-95ea942161ef","colab":{"base_uri":"https://localhost:8080/"}},"source":["#Tenemos nuestro listado de elementos en una estructura diccionario.\n","listado = {\n","          \"Nombre\":[\"Juan\",\"Maria\",\"Roberto\",\"Gonzalo\",\"Mariana\"],\n","           \"Apellido\":[\"Ruiz\",\"Alvarez\",\"Gonzalez\",\"Marquez\",\"Oliveri\"],\n","           \"Edad\":[20,40,50,50,40]\n","           }\n","\n","#La forma de presentar los datos no es la más intuitiva.\n","listado"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'Apellido': ['Ruiz', 'Alvarez', 'Gonzalez', 'Marquez', 'Oliveri'],\n"," 'Edad': [20, 40, 50, 50, 40],\n"," 'Nombre': ['Juan', 'Maria', 'Roberto', 'Gonzalo', 'Mariana']}"]},"metadata":{"tags":[]},"execution_count":323}]},{"cell_type":"code","metadata":{"id":"pbmX4od68D9r","executionInfo":{"status":"ok","timestamp":1601401020522,"user_tz":180,"elapsed":830,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"75e10ab1-d13c-4727-c4f2-4d774fa74794","colab":{"base_uri":"https://localhost:8080/","height":69}},"source":["listado"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'Apellido': ['Ruiz', 'Alvarez', 'Gonzalez', 'Marquez', 'Oliveri'],\n"," 'Edad': [20, 40, 50, 50, 40],\n"," 'Nombre': ['Juan', 'Maria', 'Roberto', 'Gonzalo', 'Mariana']}"]},"metadata":{"tags":[]},"execution_count":325}]},{"cell_type":"code","metadata":{"id":"jqDTp_C1OgJ2","executionInfo":{"status":"ok","timestamp":1601401030843,"user_tz":180,"elapsed":815,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"f144a2a2-aa39-4926-bff2-0c0915bb4f7a","colab":{"base_uri":"https://localhost:8080/"}},"source":["#Podemos consultar las claves de nuestro diccionario, pero aún así no es tan claro.\n","listado.keys()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["dict_keys(['Nombre', 'Apellido', 'Edad'])"]},"metadata":{"tags":[]},"execution_count":326}]},{"cell_type":"code","metadata":{"id":"3isrVB87OYqO"},"source":["#Creamos un dataframe para darle forma tabular.\n","listado_tabla = pd.DataFrame(listado)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"-KMteScyOVyT","executionInfo":{"status":"ok","timestamp":1601389130127,"user_tz":180,"elapsed":710,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"7784a341-cb87-4fc6-edf4-ea5768698783","colab":{"base_uri":"https://localhost:8080/","height":206}},"source":["#Lo imprimos por pantalla para verlo.\n","listado_tabla"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Nombre</th>\n","      <th>Apellido</th>\n","      <th>Edad</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Juan</td>\n","      <td>Ruiz</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Maria</td>\n","      <td>Alvarez</td>\n","      <td>40</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Roberto</td>\n","      <td>Gonzalez</td>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Gonzalo</td>\n","      <td>Marquez</td>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Mariana</td>\n","      <td>Oliveri</td>\n","      <td>40</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Nombre  Apellido  Edad\n","0     Juan      Ruiz    20\n","1    Maria   Alvarez    40\n","2  Roberto  Gonzalez    50\n","3  Gonzalo   Marquez    50\n","4  Mariana   Oliveri    40"]},"metadata":{"tags":[]},"execution_count":108}]},{"cell_type":"code","metadata":{"id":"Ssapg0M78ZGd","executionInfo":{"status":"ok","timestamp":1601401102147,"user_tz":180,"elapsed":700,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"76bb42b8-f487-40cf-b570-1f7cd4bcb0c7","colab":{"base_uri":"https://localhost:8080/","height":69}},"source":["listado"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'Apellido': ['Ruiz', 'Alvarez', 'Gonzalez', 'Marquez', 'Oliveri'],\n"," 'Edad': [20, 40, 50, 50, 40],\n"," 'Nombre': ['Juan', 'Maria', 'Roberto', 'Gonzalo', 'Mariana']}"]},"metadata":{"tags":[]},"execution_count":329}]},{"cell_type":"code","metadata":{"id":"GJ0guIgz8R1t","executionInfo":{"status":"ok","timestamp":1601401176906,"user_tz":180,"elapsed":774,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"88ea7751-51bc-4349-ea44-79ca3585d95f","colab":{"base_uri":"https://localhost:8080/","height":206}},"source":["listado_tabla"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Nombre</th>\n","      <th>Apellido</th>\n","      <th>Edad</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Juan</td>\n","      <td>Ruiz</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Maria</td>\n","      <td>Alvarez</td>\n","      <td>40</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Roberto</td>\n","      <td>Gonzalez</td>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Gonzalo</td>\n","      <td>Marquez</td>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Mariana</td>\n","      <td>Oliveri</td>\n","      <td>40</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Nombre  Apellido  Edad\n","0     Juan      Ruiz    20\n","1    Maria   Alvarez    40\n","2  Roberto  Gonzalez    50\n","3  Gonzalo   Marquez    50\n","4  Mariana   Oliveri    40"]},"metadata":{"tags":[]},"execution_count":333}]},{"cell_type":"code","metadata":{"id":"FkRWv08JOzD9"},"source":["#Genero una serie utilizando los métodos que aprendimos anteriormente.\n","sueldo = pd.Series(data=np.random.randint(20000,30000,5)) "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"zD9lE7an8x4p","executionInfo":{"status":"ok","timestamp":1601401282333,"user_tz":180,"elapsed":749,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"195cffbd-7f6a-44f7-a3e0-2d4e55452aef","colab":{"base_uri":"https://localhost:8080/","height":121}},"source":["sueldo = pd.Series(data=np.random.randint(20000,30000,5))\n","\n","sueldo"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    20697\n","1    25272\n","2    24626\n","3    27267\n","4    20863\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":338}]},{"cell_type":"code","metadata":{"id":"6szJ0MljQLjn","executionInfo":{"status":"ok","timestamp":1601401323471,"user_tz":180,"elapsed":692,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"4602174a-b776-49e4-c1ed-58b4650f3763","colab":{"base_uri":"https://localhost:8080/","height":206}},"source":["#Imprimo mi serie por pantalla y vemos que tiene un índice asociado. Esto nos va a permitir concatenarlo a nuestra tabla.\n","sueldo\n","\n","\n","listado_tabla"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Nombre</th>\n","      <th>Apellido</th>\n","      <th>Edad</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Juan</td>\n","      <td>Ruiz</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Maria</td>\n","      <td>Alvarez</td>\n","      <td>40</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Roberto</td>\n","      <td>Gonzalez</td>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Gonzalo</td>\n","      <td>Marquez</td>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Mariana</td>\n","      <td>Oliveri</td>\n","      <td>40</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Nombre  Apellido  Edad\n","0     Juan      Ruiz    20\n","1    Maria   Alvarez    40\n","2  Roberto  Gonzalez    50\n","3  Gonzalo   Marquez    50\n","4  Mariana   Oliveri    40"]},"metadata":{"tags":[]},"execution_count":339}]},{"cell_type":"code","metadata":{"id":"tU-544yKP8GX"},"source":["#Sintaxis simple para generar una nueva columna con la serie que creamos.\n","listado_tabla[\"Sueldo\"] = sueldo\n","\n","#Imprimo para ver mi nueva columna.\n","listado_tabla[\"N° empleado\"] = [1,2,3,4,5]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Ih-nN-8W9cO5","executionInfo":{"status":"ok","timestamp":1601401405878,"user_tz":180,"elapsed":702,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"59fe0184-9730-4575-bca8-54ddea2b796d","colab":{"base_uri":"https://localhost:8080/","height":206}},"source":["listado_tabla[\"N° empleado\"] = [1,2,3,4,5]\n","\n","listado_tabla"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Nombre</th>\n","      <th>Apellido</th>\n","      <th>Edad</th>\n","      <th>Sueldo</th>\n","      <th>N° empleado</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Juan</td>\n","      <td>Ruiz</td>\n","      <td>20</td>\n","      <td>20697</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Maria</td>\n","      <td>Alvarez</td>\n","      <td>40</td>\n","      <td>25272</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Roberto</td>\n","      <td>Gonzalez</td>\n","      <td>50</td>\n","      <td>24626</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Gonzalo</td>\n","      <td>Marquez</td>\n","      <td>50</td>\n","      <td>27267</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Mariana</td>\n","      <td>Oliveri</td>\n","      <td>40</td>\n","      <td>20863</td>\n","      <td>5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Nombre  Apellido  Edad  Sueldo  N° empleado\n","0     Juan      Ruiz    20   20697            1\n","1    Maria   Alvarez    40   25272            2\n","2  Roberto  Gonzalez    50   24626            3\n","3  Gonzalo   Marquez    50   27267            4\n","4  Mariana   Oliveri    40   20863            5"]},"metadata":{"tags":[]},"execution_count":344}]},{"cell_type":"markdown","metadata":{"id":"W10sTAmeWutp"},"source":["##### **Slicing en Pandas**"]},{"cell_type":"code","metadata":{"id":"tlvzAZ4DW13-","executionInfo":{"status":"ok","timestamp":1601391310304,"user_tz":180,"elapsed":729,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"3f8037f7-64f2-451a-db2d-b05ad154b2d4","colab":{"base_uri":"https://localhost:8080/","height":121}},"source":["#Filtros por columnas\n","\n","#Para acceder a los datos de una columna.\n","listado_tabla[\"Sueldo\"]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    23795\n","1    23878\n","2    23410\n","3    28602\n","4    21195\n","Name: Sueldo, dtype: int64"]},"metadata":{"tags":[]},"execution_count":120}]},{"cell_type":"code","metadata":{"id":"xiiEWXaM9rPF","executionInfo":{"status":"ok","timestamp":1601401445102,"user_tz":180,"elapsed":767,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"ebca3b50-e02d-43aa-e45c-e86c66b88bb6","colab":{"base_uri":"https://localhost:8080/","height":121}},"source":["listado_tabla[\"Sueldo\"]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    20697\n","1    25272\n","2    24626\n","3    27267\n","4    20863\n","Name: Sueldo, dtype: int64"]},"metadata":{"tags":[]},"execution_count":345}]},{"cell_type":"code","metadata":{"id":"PqcxJi4FXGsM","executionInfo":{"status":"ok","timestamp":1601391350369,"user_tz":180,"elapsed":750,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"f191bcc7-c678-4521-90a6-d46d8b762245","colab":{"base_uri":"https://localhost:8080/","height":206}},"source":["#Para acceder a los datos de dos columnas.\n","listado_tabla[[\"Sueldo\",\"Nombre\"]]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sueldo</th>\n","      <th>Nombre</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>23795</td>\n","      <td>Juan</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>23878</td>\n","      <td>Maria</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>23410</td>\n","      <td>Roberto</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>28602</td>\n","      <td>Gonzalo</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>21195</td>\n","      <td>Mariana</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Sueldo   Nombre\n","0   23795     Juan\n","1   23878    Maria\n","2   23410  Roberto\n","3   28602  Gonzalo\n","4   21195  Mariana"]},"metadata":{"tags":[]},"execution_count":122}]},{"cell_type":"code","metadata":{"id":"pFW2eJFZ9yRI","executionInfo":{"status":"ok","timestamp":1601401513743,"user_tz":180,"elapsed":695,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"0d0df2b1-a432-4596-edc1-bc956bc9e404","colab":{"base_uri":"https://localhost:8080/","height":206}},"source":["listado_1 = listado_tabla[[\"Edad\",\"Nombre\",\"Sueldo\"]]\n","\n","listado_1"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Edad</th>\n","      <th>Nombre</th>\n","      <th>Sueldo</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20</td>\n","      <td>Juan</td>\n","      <td>20697</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>40</td>\n","      <td>Maria</td>\n","      <td>25272</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>50</td>\n","      <td>Roberto</td>\n","      <td>24626</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>50</td>\n","      <td>Gonzalo</td>\n","      <td>27267</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>40</td>\n","      <td>Mariana</td>\n","      <td>20863</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Edad   Nombre  Sueldo\n","0    20     Juan   20697\n","1    40    Maria   25272\n","2    50  Roberto   24626\n","3    50  Gonzalo   27267\n","4    40  Mariana   20863"]},"metadata":{"tags":[]},"execution_count":351}]},{"cell_type":"code","metadata":{"id":"ItKKlab2XOMR","executionInfo":{"status":"ok","timestamp":1601401564564,"user_tz":180,"elapsed":748,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"31c506b7-7fc6-4541-917c-7419815d34cc","colab":{"base_uri":"https://localhost:8080/"}},"source":["#Slicing para acceder a los datos por filas.\n","\n","#Accedemos a las primeras 4 filas.\n","listado_tabla[0:2]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Nombre</th>\n","      <th>Apellido</th>\n","      <th>Edad</th>\n","      <th>Sueldo</th>\n","      <th>N° empleado</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Juan</td>\n","      <td>Ruiz</td>\n","      <td>20</td>\n","      <td>20697</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Maria</td>\n","      <td>Alvarez</td>\n","      <td>40</td>\n","      <td>25272</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  Nombre Apellido  Edad  Sueldo  N° empleado\n","0   Juan     Ruiz    20   20697            1\n","1  Maria  Alvarez    40   25272            2"]},"metadata":{"tags":[]},"execution_count":352}]},{"cell_type":"code","metadata":{"id":"U-G9quEG-EN9","executionInfo":{"status":"ok","timestamp":1601401573984,"user_tz":180,"elapsed":744,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"04c98796-1b9c-476c-fe7c-33d21927dec0","colab":{"base_uri":"https://localhost:8080/","height":112}},"source":["listado_tabla[0:2]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Nombre</th>\n","      <th>Apellido</th>\n","      <th>Edad</th>\n","      <th>Sueldo</th>\n","      <th>N° empleado</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Juan</td>\n","      <td>Ruiz</td>\n","      <td>20</td>\n","      <td>20697</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Maria</td>\n","      <td>Alvarez</td>\n","      <td>40</td>\n","      <td>25272</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  Nombre Apellido  Edad  Sueldo  N° empleado\n","0   Juan     Ruiz    20   20697            1\n","1  Maria  Alvarez    40   25272            2"]},"metadata":{"tags":[]},"execution_count":353}]},{"cell_type":"code","metadata":{"id":"jF80m4J_Xdmj","executionInfo":{"status":"ok","timestamp":1601391493711,"user_tz":180,"elapsed":685,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"46f49194-c220-42b8-b1de-d90129bff1da","colab":{"base_uri":"https://localhost:8080/","height":112}},"source":["#Accedemos a datos de dos filas del medio con el parámetro \"step\"\n","listado_tabla[2:5:2]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Nombre</th>\n","      <th>Apellido</th>\n","      <th>Edad</th>\n","      <th>Sueldo</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>Roberto</td>\n","      <td>Gonzalez</td>\n","      <td>50</td>\n","      <td>23410</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Mariana</td>\n","      <td>Oliveri</td>\n","      <td>40</td>\n","      <td>21195</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Nombre  Apellido  Edad  Sueldo\n","2  Roberto  Gonzalez    50   23410\n","4  Mariana   Oliveri    40   21195"]},"metadata":{"tags":[]},"execution_count":128}]},{"cell_type":"code","metadata":{"id":"GRY3Mizl-Xvi","executionInfo":{"status":"ok","timestamp":1601401623547,"user_tz":180,"elapsed":906,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"88dd13db-d25e-4aff-eb53-de19a38ea5d1","colab":{"base_uri":"https://localhost:8080/","height":206}},"source":["listado_tabla"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Nombre</th>\n","      <th>Apellido</th>\n","      <th>Edad</th>\n","      <th>Sueldo</th>\n","      <th>N° empleado</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Juan</td>\n","      <td>Ruiz</td>\n","      <td>20</td>\n","      <td>20697</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Maria</td>\n","      <td>Alvarez</td>\n","      <td>40</td>\n","      <td>25272</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Roberto</td>\n","      <td>Gonzalez</td>\n","      <td>50</td>\n","      <td>24626</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Gonzalo</td>\n","      <td>Marquez</td>\n","      <td>50</td>\n","      <td>27267</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Mariana</td>\n","      <td>Oliveri</td>\n","      <td>40</td>\n","      <td>20863</td>\n","      <td>5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Nombre  Apellido  Edad  Sueldo  N° empleado\n","0     Juan      Ruiz    20   20697            1\n","1    Maria   Alvarez    40   25272            2\n","2  Roberto  Gonzalez    50   24626            3\n","3  Gonzalo   Marquez    50   27267            4\n","4  Mariana   Oliveri    40   20863            5"]},"metadata":{"tags":[]},"execution_count":354}]},{"cell_type":"code","metadata":{"id":"mE4vgU2mX4CU","executionInfo":{"status":"ok","timestamp":1601391546284,"user_tz":180,"elapsed":610,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"55a47a3f-bd88-4ecc-dcd1-a83b9ce92b94","colab":{"base_uri":"https://localhost:8080/","height":121}},"source":["#Slicing condicional con máscara booleana.\n","listado_tabla[\"Nombre\"]==\"Roberto\""],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    False\n","1    False\n","2     True\n","3    False\n","4    False\n","Name: Nombre, dtype: bool"]},"metadata":{"tags":[]},"execution_count":129}]},{"cell_type":"code","metadata":{"id":"N1Wz8IzU-hVe","executionInfo":{"status":"ok","timestamp":1601401673037,"user_tz":180,"elapsed":742,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"cba387af-8bfe-4b82-fe3d-06b0a9c0c6c5","colab":{"base_uri":"https://localhost:8080/","height":121}},"source":["listado_tabla[\"Nombre\"] ==\"Roberto\""],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    False\n","1    False\n","2     True\n","3    False\n","4    False\n","Name: Nombre, dtype: bool"]},"metadata":{"tags":[]},"execution_count":355}]},{"cell_type":"code","metadata":{"id":"1A7uAZwCYBjV","executionInfo":{"status":"ok","timestamp":1601391744642,"user_tz":180,"elapsed":710,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"138264c5-2116-41fe-9525-3fa422dd45ad","colab":{"base_uri":"https://localhost:8080/","height":81}},"source":["#Filtrar por datos que cumplan la condición\n","listado_tabla[listado_tabla[\"Nombre\"]==\"Roberto\"]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Nombre</th>\n","      <th>Apellido</th>\n","      <th>Edad</th>\n","      <th>Sueldo</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>Roberto</td>\n","      <td>Gonzalez</td>\n","      <td>50</td>\n","      <td>23410</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Nombre  Apellido  Edad  Sueldo\n","2  Roberto  Gonzalez    50   23410"]},"metadata":{"tags":[]},"execution_count":139}]},{"cell_type":"code","metadata":{"id":"tMvh7vCz-2w8","executionInfo":{"status":"ok","timestamp":1601401767277,"user_tz":180,"elapsed":734,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"6ad73c6d-a4bd-4229-fa6d-e59666cc1ffe","colab":{"base_uri":"https://localhost:8080/","height":81}},"source":["listado_tabla[listado_tabla[\"Nombre\"]==\"Mariana\"]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Nombre</th>\n","      <th>Apellido</th>\n","      <th>Edad</th>\n","      <th>Sueldo</th>\n","      <th>N° empleado</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>4</th>\n","      <td>Mariana</td>\n","      <td>Oliveri</td>\n","      <td>40</td>\n","      <td>20863</td>\n","      <td>5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Nombre Apellido  Edad  Sueldo  N° empleado\n","4  Mariana  Oliveri    40   20863            5"]},"metadata":{"tags":[]},"execution_count":357}]},{"cell_type":"code","metadata":{"id":"5YULdq4QYuiu","executionInfo":{"status":"ok","timestamp":1601401798651,"user_tz":180,"elapsed":789,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"9f1d73c4-ba84-476e-ae6b-83a78e27fc3b","colab":{"base_uri":"https://localhost:8080/"}},"source":["#Filtrar por datos que cumplan la condición\n","listado_tabla[listado_tabla[\"Sueldo\"]>22000]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Nombre</th>\n","      <th>Apellido</th>\n","      <th>Edad</th>\n","      <th>Sueldo</th>\n","      <th>N° empleado</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>Maria</td>\n","      <td>Alvarez</td>\n","      <td>40</td>\n","      <td>25272</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Roberto</td>\n","      <td>Gonzalez</td>\n","      <td>50</td>\n","      <td>24626</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Gonzalo</td>\n","      <td>Marquez</td>\n","      <td>50</td>\n","      <td>27267</td>\n","      <td>4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Nombre  Apellido  Edad  Sueldo  N° empleado\n","1    Maria   Alvarez    40   25272            2\n","2  Roberto  Gonzalez    50   24626            3\n","3  Gonzalo   Marquez    50   27267            4"]},"metadata":{"tags":[]},"execution_count":358}]},{"cell_type":"code","metadata":{"id":"g71NRR4M_Fju","executionInfo":{"status":"ok","timestamp":1601401807586,"user_tz":180,"elapsed":739,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"0632011a-ddcc-4bf6-e7a8-5526430931a7","colab":{"base_uri":"https://localhost:8080/","height":143}},"source":["listado_tabla[listado_tabla[\"Sueldo\"]>22000]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Nombre</th>\n","      <th>Apellido</th>\n","      <th>Edad</th>\n","      <th>Sueldo</th>\n","      <th>N° empleado</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>Maria</td>\n","      <td>Alvarez</td>\n","      <td>40</td>\n","      <td>25272</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Roberto</td>\n","      <td>Gonzalez</td>\n","      <td>50</td>\n","      <td>24626</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Gonzalo</td>\n","      <td>Marquez</td>\n","      <td>50</td>\n","      <td>27267</td>\n","      <td>4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Nombre  Apellido  Edad  Sueldo  N° empleado\n","1    Maria   Alvarez    40   25272            2\n","2  Roberto  Gonzalez    50   24626            3\n","3  Gonzalo   Marquez    50   27267            4"]},"metadata":{"tags":[]},"execution_count":359}]},{"cell_type":"markdown","metadata":{"id":"mY0oiwg8ZQoD"},"source":["##### **Indexing: iloc y loc**"]},{"cell_type":"code","metadata":{"id":"6hWwBcz1Y13i","executionInfo":{"status":"ok","timestamp":1601392040282,"user_tz":180,"elapsed":691,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"488ee134-95e7-4a7d-d420-e386edc9eb9f","colab":{"base_uri":"https://localhost:8080/","height":104}},"source":["#Utilizamos el método loc para poder hacer un slicing más \"prolijo\" e informativo.\n","#El método loc busca en función de los parámetros del índice. \n","\n","#Accedemos a los datos de la primera fila.\n","listado_tabla.loc[0]\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Nombre       Juan\n","Apellido     Ruiz\n","Edad           20\n","Sueldo      23795\n","Name: 0, dtype: object"]},"metadata":{"tags":[]},"execution_count":147}]},{"cell_type":"code","metadata":{"id":"-G79r-Af_RfN","executionInfo":{"status":"ok","timestamp":1601401894728,"user_tz":180,"elapsed":788,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"cc05b4b6-9cf3-4121-85fb-a68732f38c3c","colab":{"base_uri":"https://localhost:8080/","height":121}},"source":["listado_tabla.loc[1]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Nombre           Maria\n","Apellido       Alvarez\n","Edad                40\n","Sueldo           25272\n","N° empleado          2\n","Name: 1, dtype: object"]},"metadata":{"tags":[]},"execution_count":364}]},{"cell_type":"code","metadata":{"id":"8okBJQoRZ2dW"},"source":["#Accedemos a los datos de hasta la 4 filas. \n","listado_tabla.loc[0:3]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"VqMph9PZ_g1R","executionInfo":{"status":"ok","timestamp":1601401926230,"user_tz":180,"elapsed":707,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"a6019dd9-f4dd-4ab3-b9c9-36580b661452","colab":{"base_uri":"https://localhost:8080/","height":175}},"source":["listado_tabla.loc[0:3]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Nombre</th>\n","      <th>Apellido</th>\n","      <th>Edad</th>\n","      <th>Sueldo</th>\n","      <th>N° empleado</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Juan</td>\n","      <td>Ruiz</td>\n","      <td>20</td>\n","      <td>20697</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Maria</td>\n","      <td>Alvarez</td>\n","      <td>40</td>\n","      <td>25272</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Roberto</td>\n","      <td>Gonzalez</td>\n","      <td>50</td>\n","      <td>24626</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Gonzalo</td>\n","      <td>Marquez</td>\n","      <td>50</td>\n","      <td>27267</td>\n","      <td>4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Nombre  Apellido  Edad  Sueldo  N° empleado\n","0     Juan      Ruiz    20   20697            1\n","1    Maria   Alvarez    40   25272            2\n","2  Roberto  Gonzalez    50   24626            3\n","3  Gonzalo   Marquez    50   27267            4"]},"metadata":{"tags":[]},"execution_count":365}]},{"cell_type":"code","metadata":{"id":"M8ELvBn_aAPn","executionInfo":{"status":"ok","timestamp":1601392139902,"user_tz":180,"elapsed":924,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"0741769d-21dd-45ac-ec0e-c1a9a7b0671b","colab":{"base_uri":"https://localhost:8080/","height":121}},"source":["#Accedemos a los datos de la columna por la etiqueta con la ubicación en las filas.\n","listado_tabla.loc[0:3,\"Sueldo\"]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    23795\n","1    23878\n","2    23410\n","3    28602\n","4    21195\n","Name: Sueldo, dtype: int64"]},"metadata":{"tags":[]},"execution_count":151}]},{"cell_type":"code","metadata":{"id":"QKpH51Fa_sZ7","executionInfo":{"status":"ok","timestamp":1601402022041,"user_tz":180,"elapsed":699,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"f404d1c1-5870-47ed-fb18-65f63eb52c9d","colab":{"base_uri":"https://localhost:8080/","height":143}},"source":["listado_tabla.loc[1:3,[\"Sueldo\",\"Nombre\"]]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sueldo</th>\n","      <th>Nombre</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>25272</td>\n","      <td>Maria</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>24626</td>\n","      <td>Roberto</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>27267</td>\n","      <td>Gonzalo</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Sueldo   Nombre\n","1   25272    Maria\n","2   24626  Roberto\n","3   27267  Gonzalo"]},"metadata":{"tags":[]},"execution_count":370}]},{"cell_type":"code","metadata":{"id":"aO-2gqbMaPdF","executionInfo":{"status":"ok","timestamp":1601392195674,"user_tz":180,"elapsed":698,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"949f468f-8991-4a96-aff5-50c4cd9df19c","colab":{"base_uri":"https://localhost:8080/","height":206}},"source":["#Accedemos a todas las filas de las columnas que le pasamos como argumento.\n","listado_tabla.loc[:,[\"Sueldo\",\"Nombre\"]]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sueldo</th>\n","      <th>Nombre</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>23795</td>\n","      <td>Juan</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>23878</td>\n","      <td>Maria</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>23410</td>\n","      <td>Roberto</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>28602</td>\n","      <td>Gonzalo</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>21195</td>\n","      <td>Mariana</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Sueldo   Nombre\n","0   23795     Juan\n","1   23878    Maria\n","2   23410  Roberto\n","3   28602  Gonzalo\n","4   21195  Mariana"]},"metadata":{"tags":[]},"execution_count":155}]},{"cell_type":"code","metadata":{"id":"YIWciynIacep","executionInfo":{"status":"ok","timestamp":1601392286734,"user_tz":180,"elapsed":713,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"e57fff85-ed81-403d-862c-2a85681d32e4","colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["#Método iloc\n","#A diferencia del anterior, lee datos de acuerdo a la posición numérica de la fila y la columna. \"Index location\"\n","\n","#Leemos el localizado en la celda de la segunda fila y la segunda columna\n","listado_tabla.iloc[1,1]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'Alvarez'"]},"metadata":{"tags":[]},"execution_count":156}]},{"cell_type":"code","metadata":{"id":"DB7Ia-CUADZN","executionInfo":{"status":"ok","timestamp":1601402152188,"user_tz":180,"elapsed":734,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"afa2f141-5288-4c97-9eb8-e0d22b57280e","colab":{"base_uri":"https://localhost:8080/","height":206}},"source":["listado_tabla"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Nombre</th>\n","      <th>Apellido</th>\n","      <th>Edad</th>\n","      <th>Sueldo</th>\n","      <th>N° empleado</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Juan</td>\n","      <td>Ruiz</td>\n","      <td>20</td>\n","      <td>20697</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Maria</td>\n","      <td>Alvarez</td>\n","      <td>40</td>\n","      <td>25272</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Roberto</td>\n","      <td>Gonzalez</td>\n","      <td>50</td>\n","      <td>24626</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Gonzalo</td>\n","      <td>Marquez</td>\n","      <td>50</td>\n","      <td>27267</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Mariana</td>\n","      <td>Oliveri</td>\n","      <td>40</td>\n","      <td>20863</td>\n","      <td>5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Nombre  Apellido  Edad  Sueldo  N° empleado\n","0     Juan      Ruiz    20   20697            1\n","1    Maria   Alvarez    40   25272            2\n","2  Roberto  Gonzalez    50   24626            3\n","3  Gonzalo   Marquez    50   27267            4\n","4  Mariana   Oliveri    40   20863            5"]},"metadata":{"tags":[]},"execution_count":376}]},{"cell_type":"code","metadata":{"id":"IeNdDerca49U","executionInfo":{"status":"ok","timestamp":1601402147935,"user_tz":180,"elapsed":710,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"2a31cf73-8adb-4517-fc49-fb82b2e1aebd","colab":{"base_uri":"https://localhost:8080/"}},"source":["#Podemos leer porciones de datos. En este caso, de la segunda fila hasta la cuarta, y sólo la 4 columna.\n","listado_tabla.iloc[1:4,3:4]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sueldo</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>25272</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>24626</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>27267</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Sueldo\n","1   25272\n","2   24626\n","3   27267"]},"metadata":{"tags":[]},"execution_count":375}]},{"cell_type":"code","metadata":{"id":"pfE8ck8YAbNI","executionInfo":{"status":"ok","timestamp":1601402181668,"user_tz":180,"elapsed":779,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"0bcf3e29-9e11-4a27-d248-0eac62997743","colab":{"base_uri":"https://localhost:8080/","height":143}},"source":["listado_tabla.iloc[1:4,3:4]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sueldo</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>25272</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>24626</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>27267</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Sueldo\n","1   25272\n","2   24626\n","3   27267"]},"metadata":{"tags":[]},"execution_count":378}]},{"cell_type":"code","metadata":{"id":"JIZ_pl9QAO7v","executionInfo":{"status":"ok","timestamp":1601402110371,"user_tz":180,"elapsed":769,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"7ea26650-c529-43be-fa81-21307afaabf3","colab":{"base_uri":"https://localhost:8080/","height":206}},"source":["listado_tabla"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Nombre</th>\n","      <th>Apellido</th>\n","      <th>Edad</th>\n","      <th>Sueldo</th>\n","      <th>N° empleado</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Juan</td>\n","      <td>Ruiz</td>\n","      <td>20</td>\n","      <td>20697</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Maria</td>\n","      <td>Alvarez</td>\n","      <td>40</td>\n","      <td>25272</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Roberto</td>\n","      <td>Gonzalez</td>\n","      <td>50</td>\n","      <td>24626</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Gonzalo</td>\n","      <td>Marquez</td>\n","      <td>50</td>\n","      <td>27267</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Mariana</td>\n","      <td>Oliveri</td>\n","      <td>40</td>\n","      <td>20863</td>\n","      <td>5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Nombre  Apellido  Edad  Sueldo  N° empleado\n","0     Juan      Ruiz    20   20697            1\n","1    Maria   Alvarez    40   25272            2\n","2  Roberto  Gonzalez    50   24626            3\n","3  Gonzalo   Marquez    50   27267            4\n","4  Mariana   Oliveri    40   20863            5"]},"metadata":{"tags":[]},"execution_count":374}]},{"cell_type":"markdown","metadata":{"id":"ezvsUMAfI-O9"},"source":["## **Matplotlib: Graficando datos.**"]},{"cell_type":"code","metadata":{"id":"AHDgr8krXbbO"},"source":["import matplotlib.pyplot as plt "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"3Mb02JW5BBOA"},"source":["import matplotlib.pyplot as plt"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"4RENHRFWdBFh","executionInfo":{"status":"ok","timestamp":1601392904746,"user_tz":180,"elapsed":751,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"b075284e-c43b-41c7-eade-c6b085981d5d","colab":{"base_uri":"https://localhost:8080/","height":265}},"source":["#Gráfico simple.\n","\n","#Con el método plot le indicamos los datos que debe graficar como parámetro.\n","plt.plot([1,2,3,4,5])\n","\n","#Le indicamos el nombre del eje Y.\n","plt.ylabel(\"Números\")\n","\n","#Le pedimos que muestre el gráfico por pantalla.\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"gixN7mdpdQwv","executionInfo":{"status":"ok","timestamp":1601395829362,"user_tz":180,"elapsed":805,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"089b773d-1333-4cd8-d038-412d1704c23c","colab":{"base_uri":"https://localhost:8080/","height":592}},"source":["#Gráfico con mayor customizacióón.\n","\n","#Definimos el tamaño de nuestra figura.\n","plt.figure(figsize=(10,10))\n","\n","#Le indicamos qué datos tiene que graficar y el estilo.\n","plt.plot(np.random.randint(10,20,10), [1, 4, 9, 16,20,1,23,4,5,9],\"ro\")\n","\n","#Le indicamos que grafique una grilla de fondo.\n","plt.grid()\n","\n","#método para qeu imprima por pantalla el gráfico. \n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 720x720 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"7Vr2YUqucIVh","executionInfo":{"status":"ok","timestamp":1601394810887,"user_tz":180,"elapsed":776,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"47db5e73-f95d-4354-88b6-4463ad49f9f6","colab":{"base_uri":"https://localhost:8080/","height":206}},"source":["#Vamos a graficar nuestra tabla. Recordemos cómo era.\n","listado_tabla\n","#Dado que tenemos variables categóricas, podemos graficar un histograma."],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Nombre</th>\n","      <th>Apellido</th>\n","      <th>Edad</th>\n","      <th>Sueldo</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Juan</td>\n","      <td>Ruiz</td>\n","      <td>20</td>\n","      <td>23795</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Maria</td>\n","      <td>Alvarez</td>\n","      <td>40</td>\n","      <td>23878</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Roberto</td>\n","      <td>Gonzalez</td>\n","      <td>50</td>\n","      <td>23410</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Gonzalo</td>\n","      <td>Marquez</td>\n","      <td>50</td>\n","      <td>28602</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Mariana</td>\n","      <td>Oliveri</td>\n","      <td>40</td>\n","      <td>21195</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Nombre  Apellido  Edad  Sueldo\n","0     Juan      Ruiz    20   23795\n","1    Maria   Alvarez    40   23878\n","2  Roberto  Gonzalez    50   23410\n","3  Gonzalo   Marquez    50   28602\n","4  Mariana   Oliveri    40   21195"]},"metadata":{"tags":[]},"execution_count":242}]},{"cell_type":"code","metadata":{"id":"Yr18jjI9j3cV","executionInfo":{"status":"ok","timestamp":1601394812408,"user_tz":180,"elapsed":821,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"eb2d0738-a13c-4e7b-d278-831c4c4dc7be","colab":{"base_uri":"https://localhost:8080/","height":337}},"source":["#Tamaño de nuestro gráfico\n","plt.figure(figsize=(20,5))\n","\n","#Funciones para customizar nuestro gráfico.\n","plt.bar(listado_tabla[\"Nombre\"],listado_tabla[\"Sueldo\"])\n","\n","#Le indicamos el nombre del eje x.\n","plt.xlabel(\"Nombre de las personas\")\n","\n","#Le indicamos el nombre del eje Y.\n","plt.ylabel(\"Sueldo percibido\")\n","\n","#Le indicamos que muestre por pantalla el gráfico \n","plt.grid()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1440x360 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"3LsSfDMckDBt","executionInfo":{"status":"ok","timestamp":1601394824828,"user_tz":180,"elapsed":774,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"fdac7330-cd9a-413e-f407-a210e5838f53","colab":{"base_uri":"https://localhost:8080/","height":338}},"source":["#Tamaño de nuestro gráfico\n","plt.figure(figsize=(20,5))\n","\n","#Funciones para customizar nuestro gráfico.\n","plt.bar(listado_tabla[\"Nombre\"],listado_tabla[\"Sueldo\"])\n","\n","#Le indicamos el nombre del eje x.\n","plt.xlabel(\"Nombre de las personas\")\n","\n","#Le indicamos el nombre del eje Y.\n","plt.ylabel(\"Sueldo percibido\")\n","\n","#Le indicamos la escala del eje Y. \n","plt.ylim(bottom=20000,top=30000)\n","\n","#Le indicamos que muestre por pantalla el gráfico \n","plt.grid()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1440x360 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"Qi4C7w-Fkjyn","executionInfo":{"status":"ok","timestamp":1601396211028,"user_tz":180,"elapsed":1188,"user":{"displayName":"Zacarias Abuchanab","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhIQg-AIQo1LcSwB2Vkcjwa7zUmAen0WfMI5SzO0w4=s64","userId":"17048485705806854007"}},"outputId":"2ac9b5f5-f3e6-4d7c-90d2-2b927fe014d5","colab":{"base_uri":"https://localhost:8080/","height":334}},"source":["tabla_hombre = pd.DataFrame()\n","tabla_hombre[\"Grupo\"] = [\"G1\",\"G2\",\"G3\",\"G4\",\"G5\",\"G6\",\"G7\",\"G8\",\"G9\",\"G10\"]\n","tabla_hombre[\"Sueldo\"] = np.random.randint(10000,15000,size=10)\n","\n","tabla_mujer = pd.DataFrame()\n","tabla_mujer[\"Grupo\"] = [\"G1\",\"G2\",\"G3\",\"G4\",\"G5\",\"G6\",\"G7\",\"G8\",\"G9\",\"G10\"]\n","tabla_mujer[\"Sueldo\"] = np.random.randint(5000,13000,size=10)\n","\n","plt.figure(figsize=(20,5))\n","\n","#Funciones para customizar nuestro gráfico.\n","plt.plot(tabla_hombre[\"Grupo\"],\n","        tabla_hombre[\"Sueldo\"],\n","        label=\"Hombre\",\n","        color=\"r\")\n","\n","\n","plt.plot(tabla_mujer[\"Grupo\"],\n","        tabla_mujer[\"Sueldo\"],\n","        label=\"Mujer\",\n","        color=\"b\")\n","\n","#Le indicamos el nombre del eje x.\n","plt.xlabel(\"Grupo\")\n","\n","#Le indicamos el nombre del eje Y.\n","plt.ylabel(\"Sueldo percibido\")\n","\n","#Ponemos leyenda\n","plt.legend()\n","\n","#Le indicamos que muestre por pantalla el gráfico \n","plt.grid()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1440x360 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]}]}